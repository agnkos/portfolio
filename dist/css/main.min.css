*,:after,:before{box-sizing:border-box;padding:0;margin:0}html{scroll-behavior:smooth}@media (min-width:768px){html{scroll-padding-top:65px}}body{font-family:Source Sans Pro,sans-serif;color:#303030}a{text-decoration:none}ul{list-style-type:none}img{display:block;max-width:100%}nav{display:flex;justify-content:space-between;align-items:center}@media (min-width:768px){nav{padding:0 1em;position:fixed;top:0;width:100%;background:#fff;border-bottom:1px solid rgba(35,91,129,.9843137255);z-index:1}}.logo{font-weight:700;font-size:1.5rem;padding:.75em}.logo a{color:#b05a7a}.nav{position:fixed;background:#efefef;color:#112b3c;top:0;left:0;right:0;z-index:1;transform:translateX(100%);transition:transform .25s cubic-bezier(.5,0,.5,1)}.nav--open{transform:translateX(0)}.nav__list{margin:5em 0;display:flex;flex-direction:column;align-items:center;gap:1em}.nav__item{display:inline-block;font-size:2rem;font-weight:700}.nav__link{color:#112b3c;transition:color .25s,background .25s}.nav__link:hover{color:rgba(35,91,129,.9843137255)}.nav .active{border-bottom:3px solid #112b3c}@media (min-width:768px){.nav{position:unset;transform:translateX(0);background:none;display:flex}.nav__list{flex-direction:row;margin:0}.nav__item{font-size:1.5rem}.nav__link{display:inline-block;height:100%;padding:.75em 1.25em}.nav .active{border:none;background-color:rgba(35,91,129,.9843137255);color:#efefef}}.hamburger-btn{position:fixed;right:1em;width:3em;padding:.5em;background:transparent;border:1px solid transparent;cursor:pointer;z-index:2;display:flex;flex-direction:column}.hamburger-btn:focus{outline:none;border:1px solid rgba(35,91,129,.9843137255);border-radius:8px}.hamburger-btn:hover .hamburger-btn__bar{background-color:rgba(35,91,129,.9843137255)}.hamburger-btn__bar{background-color:#112b3c;border-radius:10px;height:4px;margin:3px 0;transition:.4s cubic-bezier(.68,-.6,.32,1.6)}.hamburger-btn__bar:first-of-type{width:50%}.hamburger-btn__bar:nth-of-type(2){width:100%}.hamburger-btn__bar:nth-of-type(3){width:50%;margin-left:auto}.hamburger-btn--open .hamburger-btn__bar:first-of-type{transform-origin:bottom;transform:rotatez(45deg) translate(5px,2px)}.hamburger-btn--open .hamburger-btn__bar:nth-of-type(2){transform-origin:top;transform:rotatez(-45deg)}.hamburger-btn--open .hamburger-btn__bar:nth-of-type(3){transform-origin:bottom right;transform:rotatez(45deg) translate(-4px,1px)}@media (min-width:768px){.hamburger-btn{display:none}}.bars-light{background-color:#efefef}.header{justify-content:space-around;padding:2em;text-align:center;min-height:calc(100vh - 60px);background-color:#112b3c;color:#efefef}.header,.header__text{display:flex;flex-direction:column}.header__text{align-items:center;padding:0 2em 2em}.header__title{font-weight:600}.header__title--strong{display:block;margin:.25em auto .1em;font-weight:700;font-size:2.5rem;position:relative;line-height:1}.header__subtitle{margin-left:auto;width:75%;font-size:1.25rem;border-top:4px solid #b05a7a;text-align:right}.header__img{width:90%;margin:2em auto}.header__arrow{cursor:pointer;margin-bottom:1em}.header__arrow-icon{width:2.5rem;animation:a 4s ease infinite;margin:0 auto}@keyframes a{0%{transform:translateY(0)}25%{transform:translateY(15px)}50%{transform:translateY(10px)}75%{transform:translateY(15px)}to{transform:translateY(0)}}@media (min-width:768px) and (orientation:landscape){.header{min-height:100vh;display:grid;grid-template-columns:repeat(2,auto);grid-template-rows:auto min-content;margin-top:2em}.header__img{align-self:end}.header__text{align-self:center}.header__title{font-size:2rem}.header__title--strong{font-size:3rem}.header__subtitle{font-size:2rem}.header__arrow{grid-column:span 2;margin-bottom:2em}.header__arrow-icon{width:3.5rem;align-self:end}}@media (min-width:1100px){.header__title{font-size:2.5rem}.header__title--strong{font-size:3.5rem}}@media (min-width:1400px){.header__title{font-size:3rem}.header__title--strong{font-size:4rem}.header__arrow-icon{width:4.5rem}}.section{padding:1em;margin-bottom:2em;text-align:center}.section__title{position:relative;margin-bottom:1em}.section__title:after{position:absolute;content:"";bottom:-7px;left:50%;height:5px;width:4rem;transform:translateX(-50%);border-radius:5px;background:#b05a7a}.section__text{margin-bottom:1em}.section__subtitle{margin-bottom:.5em}.section__link{font-weight:600;color:#112b3c;transition:color .5s,border .5s}.section__link:hover{color:rgba(35,91,129,.9843137255);border-bottom:1px solid rgba(35,91,129,.9843137255)}.section--about{max-width:850px;margin-left:auto;margin-right:auto}@media (min-width:768px){.section{padding:2em}}@media (min-width:1200px){.section{font-size:1.25rem}.section__title{font-size:2rem}}.skills{display:flex;flex-wrap:wrap;justify-content:center;gap:.5em}.skills__item{background-color:rgba(48,48,48,.5);padding:.25em .5em;border-radius:5px;color:#efefef}.project,.projects-container{display:flex;flex-direction:column;align-items:center}.project{max-width:850px;gap:1em;margin:3em 0}.project:last-of-type{margin-bottom:0}.project__img{width:90%;height:300px;max-width:300px;-o-object-fit:cover;object-fit:cover;-o-object-position:top left;object-position:top left}.project__info{display:flex;flex-direction:column;align-items:center;gap:.5em}.project__title{font-size:1.25rem;font-weight:700;text-transform:uppercase}.project .stack{padding:.5em;display:flex;justify-content:center;flex-wrap:wrap;gap:.5em}.project .stack__item{padding:.25em .5em;font-size:.8rem;border:1px solid #303030;border-radius:5px}.project__links{padding:.75em 0 2em;border-radius:5px}.project__link{padding:.25em .5em;margin-left:.5em;border:1px solid #112b3c;border-radius:5px;font-weight:600;transition:background-color .2s,color .2s,border-color .2s}.project__link--live{background-color:#112b3c;color:#efefef}.project__link--live:hover{background-color:rgba(35,91,129,.9843137255);border-color:rgba(35,91,129,.9843137255)}.project__link--code{color:#112b3c}.project__link--code:hover{color:rgba(35,91,129,.9843137255);border-color:rgba(35,91,129,.9843137255)}@media (min-width:768px){.project{flex-direction:row;justify-content:center;align-items:stretch;gap:2em;margin:3em}.project__info{min-height:100%;justify-content:space-between;padding:2em 0}.project__links{margin-top:auto;padding-bottom:0}}@media (min-width:1200px){.project{max-width:1000px}.project__img{width:400px;height:400px;max-width:400px}.project .stack__item{font-size:1rem}}.footer{background-color:#112b3c;color:#efefef;margin-bottom:0}.footer__bottom-text{padding-top:1em;border-top:1px solid #efefef}.footer__year{margin-right:.25em}@media (min-width:768px){.footer__bottom-text{padding-top:2em}}.social-links{display:flex;justify-content:center;gap:1em;margin-bottom:1em}.social-links__item{color:#efefef;font-size:1.5rem;cursor:pointer;transition:color .25s}.social-links__item:hover{color:#b05a7a}.social-links__item--nav{font-size:2.5rem;color:#112b3c}.social-links__item--nav:hover{color:rgba(35,91,129,.9843137255)}@media (min-width:768px){.social-links__item--nav{display:none}}@media (min-width:1200px){.social-links__item{font-size:2.5rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
